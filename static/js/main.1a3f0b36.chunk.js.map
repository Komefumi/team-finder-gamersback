{"version":3,"sources":["styling/content-area.module.sass","styling/main.module.sass","styling/card.module.sass","assets/g844.png","components/UserImagePlaceholder.tsx","config/nav.ts","assets/gamers-back-logo.jpg","components/Navbar.tsx","components/Sidebar.tsx","types/CardHeaderLeftPieceTypeEnum.ts","types/CardFacesEnum.ts","components/Card.tsx","assets/player.jpg","components/ContentArea.tsx","App.tsx","reportWebVitals.ts","index.tsx","styling/navbar.module.sass","styling/sidebar.module.sass"],"names":["module","exports","UserImagePlaceholder","size","width","height","src","PlaceholderUserImageSrc","alt","iconSize","containment","navbarStyles","navbarNav","sidebarIcon","sidebarIconButton","siteLogo","searchContainment","searchComponent","searchIcon","searchInput","listedItems","messageNotificationContainment","messageIndicator","userDropdown","greetingAndAddressingBlock","greetingMsg","addressingBlock","NavbarSearch","className","navIconSize","type","placeholder","Navbar","sidebarToggler","onClick","gamersBackLogo","sidebarStyles","sidebarNav","listItems","isClosedStyles","Sidebar","isOpen","classnames","CardFaces","cardStructure","cardStyling","cardHeader","recentlyUploadedCardHeader","recentlyUploadedCardBody","viewAllLink","orangeLeftPiece","lighterOrangeLeftPiece","cardHeaderRule","cardTitle","cardBody","postCard","postCardUpperLightStroke","postBody","postBodyLeft","postBodyRight","postBodyTextWriter","upcomingGamesCardBody","gamerCardStructure","gamerCardFrontFace","gamerCardBackFace","backFaceOrangePiece","displayPictureSpace","displayPicture","displayNameSpace","displayNameLeftPiece","displayNameRightPiece","displayName","gamerStatsSpace","gamerStatRow","gamerStatLabel","gamerStatValues","gamerRoles","gamerRoleItem","gamerRoleGraphic","gamerRoleName","faceSwitcherSpace","faceSwitchButton","switchOrb","activeSwitchOrb","languageSpace","achievementsSpace","recruitmentDetailsSpace","CardStructure","children","CardHeader","leftPieceToUse","leftPieceClass","CardHeaderLeftPieceTypeEnum","LIGHTER","CardTitle","CardBody","UpcomingGamesCard","RecentlyUploadedCard","NewPostCard","props","title","inputArea","useRef","useState","isTextAreaAutosized","setIsTextAreaAutosized","useEffect","current","autosize","destroy","ref","name","id","GamerCard","profilePictureSrc","gamerStats","languages","achievements","availableForRecruitment","CardFacesEnum","FRONT","currentFace","setCurrentFace","game","team","rank","roles","map","RenderGraphic","BACK","console","log","pushRightMode","contentAreaStyling","column","feedColumn","Column","FeedColumn","sampleUser","playerImage","undefined","ContentArea","sidebarOpen","sidebarAndContentWrapper","main","App","sidebarIsOpen","setSidebarIsOpen","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a3f0b36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"push-right-mode\":\"content-area_push-right-mode__30jpW\",\"containment\":\"content-area_containment__2ILg3\",\"column\":\"content-area_column__2Dq8B\",\"feed-column\":\"content-area_feed-column__1M_LH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"main_app__1F0d_\",\"sidebar-and-content-wrapper\":\"main_sidebar-and-content-wrapper__17XI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-structure\":\"card_card-structure__12S-S\",\"gamer-card-structure\":\"card_gamer-card-structure__3j1-y\",\"card-header\":\"card_card-header__36wcA\",\"recently-uploaded-card-header\":\"card_recently-uploaded-card-header__fiGJG\",\"recently-uploaded-card-body\":\"card_recently-uploaded-card-body__30qBd\",\"view-all-link\":\"card_view-all-link__1HD4r\",\"orange-left-piece\":\"card_orange-left-piece__2zniE\",\"lighter-orange-left-piece\":\"card_lighter-orange-left-piece__1U0tc\",\"card-header-rule\":\"card_card-header-rule__2j6Az\",\"card-title\":\"card_card-title__2n4Gf\",\"card-body\":\"card_card-body__2YCax\",\"post-card\":\"card_post-card__P_-67\",\"post-card-upper-light-stroke\":\"card_post-card-upper-light-stroke__2Onl5\",\"post-body\":\"card_post-body__3GWcQ\",\"post-body-left\":\"card_post-body-left__2bhV2\",\"post-body-right\":\"card_post-body-right__2YeIg\",\"post-body-text-writer\":\"card_post-body-text-writer__1USRM\",\"upcoming-games-card-body\":\"card_upcoming-games-card-body__AP95z\",\"gamer-card-front-face\":\"card_gamer-card-front-face__3zEYp\",\"display-picture-space\":\"card_display-picture-space__Z2M8I\",\"display-picture\":\"card_display-picture__39PNm\",\"display-name-space\":\"card_display-name-space__twAwF\",\"display-name-left-piece\":\"card_display-name-left-piece__URcHC\",\"display-name-right-piece\":\"card_display-name-right-piece__3HGD-\",\"display-name\":\"card_display-name__12Uvt\",\"gamer-stats-space\":\"card_gamer-stats-space__Ao_l6\",\"gamer-stat-row\":\"card_gamer-stat-row__1teah\",\"gamer-stat-label\":\"card_gamer-stat-label__3QLPA\",\"gamer-stat-values\":\"card_gamer-stat-values__t3Nez\",\"gamer-state-label\":\"card_gamer-state-label__19tv4\",\"gamer-roles\":\"card_gamer-roles__30wI6\",\"gamer-role-item\":\"card_gamer-role-item__1VXaf\",\"gamer-role-graphic\":\"card_gamer-role-graphic__1cQDX\",\"gamer-role-name\":\"card_gamer-role-name__3aNWf\",\"face-switcher-space\":\"card_face-switcher-space__2RTG7\",\"face-switch-button\":\"card_face-switch-button__NTefU\",\"gamer-card-back-face\":\"card_gamer-card-back-face__1paWG\",\"switch-orb\":\"card_switch-orb__2Lo16\",\"active-switch-orb\":\"card_active-switch-orb__Yccaw\",\"back-face-orange-piece\":\"card_back-face-orange-piece__26D2m\",\"language-space\":\"card_language-space__20Czb\",\"achievements-space\":\"card_achievements-space__2KlW1\",\"recruitment-details-space\":\"card_recruitment-details-space__312zX\"};","export default __webpack_public_path__ + \"static/media/g844.77a51f8c.png\";","import UserImagePlaceholderProps from 'types/UserImagePlaceholderProps';\n\nimport PlaceholderUserImageSrc from 'assets/g844.png';\n\nexport default function UserImagePlaceholder({ size }: UserImagePlaceholderProps) {\n  return (<img width={size} height={size} src={PlaceholderUserImageSrc} alt=\"User Placeholder\" />);\n}\n","export const iconSize: string = \"2em\";\n","export default __webpack_public_path__ + \"static/media/gamers-back-logo.7c610c66.jpg\";","import { GiHamburgerMenu } from \"react-icons/gi\";\nimport { GoSearch } from \"react-icons/go\";\nimport { FaHome } from \"react-icons/fa\";\nimport { TiMessages } from \"react-icons/ti\";\nimport { IoIosNotificationsOutline as NotifIcon } from \"react-icons/io\";\nimport { BsChevronDown } from \"react-icons/bs\";\n\nimport UserImagePlaceholder from \"components/UserImagePlaceholder\";\n\nimport NavbarProps from \"types/NavbarProps\";\n\nimport { iconSize as navIconSize } from \"config/nav\";\n\nimport gamersBackLogo from \"assets/gamers-back-logo.jpg\";\n\nimport navbarStyles from \"styling/navbar.module.sass\";\n\nconst {\n  containment,\n  \"navbar-nav\": navbarNav,\n  \"sidebar-icon-containment\": sidebarIcon,\n  \"sidebar-icon-button\": sidebarIconButton,\n  \"site-logo\": siteLogo,\n  \"search-containment\": searchContainment,\n  \"search-component\": searchComponent,\n  \"search-icon\": searchIcon,\n  \"search-input\": searchInput,\n  \"listed-items\": listedItems,\n  \"message-notifcation-containment\": messageNotificationContainment,\n  \"message-indicator\": messageIndicator,\n  \"user-dropdown\": userDropdown,\n  \"greeting-and-addressing-block\": greetingAndAddressingBlock,\n  \"greeting-msg\": greetingMsg,\n  \"addressing-block\": addressingBlock,\n} = navbarStyles;\n\nfunction NavbarSearch() {\n  return (\n    <div className={searchComponent}>\n      <GoSearch className={searchIcon} size={navIconSize} />\n      <input className={searchInput} type=\"text\" placeholder=\"Search...\" />\n    </div>\n  );\n}\n\nexport default function Navbar({ sidebarToggler }: NavbarProps) {\n  return (\n    <div className={containment}>\n      <nav className={navbarNav}>\n        <div className={sidebarIcon}>\n          <button onClick={sidebarToggler} className={sidebarIconButton}>\n            <GiHamburgerMenu size={navIconSize} />\n          </button>\n        </div>\n        <span className={siteLogo}>\n          <img src={gamersBackLogo} width=\"200px\" height=\"auto\" alt=\"\" />\n        </span>\n        <div className={searchContainment}>\n          <NavbarSearch />\n        </div>\n        <ul className={listedItems}>\n          <li>\n            <button>\n              <FaHome size={navIconSize} />\n            </button>\n          </li>\n          <li className={messageNotificationContainment}>\n            <button>\n              <TiMessages size={navIconSize} />\n              <span className={messageIndicator}>4</span>\n            </button>\n          </li>\n          <li>\n            <button>\n              <NotifIcon size={navIconSize} />\n            </button>\n          </li>\n          <li className={userDropdown}>\n            <button>\n              <UserImagePlaceholder size=\"33px\" />\n            </button>\n            <div className={greetingAndAddressingBlock}>\n              <span className={greetingMsg}>Hi,</span>\n              <span className={addressingBlock}>Space COWBOY</span>\n            </div>\n            <button>\n              <BsChevronDown size={navIconSize} />\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n}\n","import classnames from 'classnames';\n\nimport { FaHome } from 'react-icons/fa';\nimport { MdPhotoLibrary } from 'react-icons/md';\nimport { MdVideoLibrary } from 'react-icons/md';\nimport { FaUserCircle } from 'react-icons/fa';\n\nimport SidebarProps from 'types/SidebarProps';\n\nimport { iconSize as navIconSize } from 'config/nav';\n\nimport sidebarStyles from 'styling/sidebar.module.sass';\n\nconst {\n  containment,\n  'sidebar-nav': sidebarNav,\n  'list-items': listItems,\n  'is-closed': isClosedStyles,\n} = sidebarStyles;\n\nexport default function Sidebar({ isOpen }: SidebarProps) {\n  return (\n    <div className={classnames([containment, !isOpen && isClosedStyles])}>\n      <nav className={sidebarNav}>\n        <ul className={listItems}>\n          <li><button><FaHome size={navIconSize} /></button></li>\n          <li><button><MdPhotoLibrary size={navIconSize} /></button></li>\n          <li><button><MdVideoLibrary size={navIconSize} /></button></li>\n          <li><button><FaUserCircle size={navIconSize} /></button></li>\n        </ul>\n      </nav>\n    </div>\n  );\n}","enum CardFaces {\n  DARKER = 'DARKER',\n  LIGHTER = 'LIGHTER',\n}\n\nexport default CardFaces;\n","enum CardFaces {\n  FRONT = 'FRONT',\n  BACK = 'BACK',\n}\n\nexport default CardFaces;\n","import autosize from \"autosize\";\nimport { useRef, useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\n\nimport UserImagePlaceholder from \"components/UserImagePlaceholder\";\n\nimport HoldingChildrenProps from \"types/HoldingChildrenProps\";\nimport StandardCardProps from \"types/StandardCardProps\";\nimport CardHeaderProps from \"types/CardHeaderProps\";\nimport CardHeaderLeftPieceTypeEnum from \"types/CardHeaderLeftPieceTypeEnum\";\nimport GamerCardProps from \"types/GamerCardProps\";\nimport NewPostCardProps from \"types/NewPostCardProps\";\nimport CardFacesEnum from \"types/CardFacesEnum\";\n\nimport cardStyling from \"styling/card.module.sass\";\n\nconst {\n  \"card-structure\": cardStructure,\n  \"card-header\": cardHeader,\n  \"recently-uploaded-card-header\": recentlyUploadedCardHeader,\n  \"recently-uploaded-card-body\": recentlyUploadedCardBody,\n  \"view-all-link\": viewAllLink,\n  \"orange-left-piece\": orangeLeftPiece,\n  \"lighter-orange-left-piece\": lighterOrangeLeftPiece,\n  \"card-header-rule\": cardHeaderRule,\n  \"card-title\": cardTitle,\n  \"card-body\": cardBody,\n  \"post-card\": postCard,\n  \"post-card-upper-light-stroke\": postCardUpperLightStroke,\n  \"post-body\": postBody,\n  \"post-body-left\": postBodyLeft,\n  \"post-body-right\": postBodyRight,\n  \"post-body-text-writer\": postBodyTextWriter,\n  \"upcoming-games-card-body\": upcomingGamesCardBody,\n  \"gamer-card-structure\": gamerCardStructure,\n  \"gamer-card-front-face\": gamerCardFrontFace,\n  \"gamer-card-back-face\": gamerCardBackFace,\n  \"back-face-orange-piece\": backFaceOrangePiece,\n  \"display-picture-space\": displayPictureSpace,\n  \"display-picture\": displayPicture,\n  \"display-name-space\": displayNameSpace,\n  \"display-name-left-piece\": displayNameLeftPiece,\n  \"display-name-right-piece\": displayNameRightPiece,\n  \"display-name\": displayName,\n  \"gamer-stats-space\": gamerStatsSpace,\n  \"gamer-stat-row\": gamerStatRow,\n  \"gamer-stat-label\": gamerStatLabel,\n  \"gamer-stat-values\": gamerStatValues,\n  \"gamer-roles\": gamerRoles,\n  \"gamer-role-item\": gamerRoleItem,\n  \"gamer-role-graphic\": gamerRoleGraphic,\n  \"gamer-role-name\": gamerRoleName,\n  \"face-switcher-space\": faceSwitcherSpace,\n  \"face-switch-button\": faceSwitchButton,\n  \"switch-orb\": switchOrb,\n  \"active-switch-orb\": activeSwitchOrb,\n  \"language-space\": languageSpace,\n  \"achievements-space\": achievementsSpace,\n  \"recruitment-details-space\": recruitmentDetailsSpace,\n} = cardStyling;\n\nconsole.log(gamerRoles);\n\nexport function CardStructure({ children }: HoldingChildrenProps) {\n  return <div className={cardStructure}>{children}</div>;\n}\n\nexport function CardHeader({ leftPieceToUse, children }: CardHeaderProps) {\n  const leftPieceClass =\n    leftPieceToUse === CardHeaderLeftPieceTypeEnum.LIGHTER\n      ? lighterOrangeLeftPiece\n      : orangeLeftPiece;\n  return (\n    <header className={cardHeader}>\n      <div className={leftPieceClass} />\n      {children}\n      <hr className={cardHeaderRule} />\n    </header>\n  );\n}\n\nexport function CardTitle({ children }: HoldingChildrenProps) {\n  return <h3 className={cardTitle}>{children}</h3>;\n}\n\nexport function CardBody({ children }: HoldingChildrenProps) {\n  return <main className={cardBody}>{children}</main>;\n}\n\nexport default function StandardCard({ title, children }: StandardCardProps) {\n  return (\n    <CardStructure>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n      </CardHeader>\n      <CardBody>{children}</CardBody>\n    </CardStructure>\n  );\n}\n\nexport function UpcomingGamesCard() {\n  return (\n    <CardStructure>\n      <CardHeader leftPieceToUse={CardHeaderLeftPieceTypeEnum.LIGHTER}>\n        <CardTitle>Upcoming Games</CardTitle>\n      </CardHeader>\n      <div className={classnames([cardBody, upcomingGamesCardBody])}></div>\n    </CardStructure>\n  );\n}\n\nexport function RecentlyUploadedCard() {\n  return (\n    <CardStructure>\n      <div className={classnames([cardHeader, recentlyUploadedCardHeader])}>\n        <div className={lighterOrangeLeftPiece} />\n        <h3 className={cardTitle}>Recently Uploaded</h3>\n        <span className={viewAllLink}>View All</span>\n        <hr className={cardHeaderRule} />\n      </div>\n      <div className={classnames([cardBody, recentlyUploadedCardBody])}></div>\n    </CardStructure>\n  );\n}\n\nexport function NewPostCard(props: NewPostCardProps) {\n  const title = props.title || \"Create your post\";\n  const inputArea = useRef(null);\n  const [isTextAreaAutosized, setIsTextAreaAutosized] = useState(false);\n\n  useEffect(() => {\n    if (!inputArea.current) return;\n    if (!isTextAreaAutosized) {\n      autosize((inputArea.current as unknown) as HTMLInputElement);\n      setIsTextAreaAutosized(true);\n    }\n\n    return () => {\n      if (isTextAreaAutosized && inputArea.current)\n        autosize.destroy((inputArea.current as unknown) as HTMLInputElement); // eslint-disable-line react-hooks/exhaustive-deps\n    };\n  }, [inputArea, isTextAreaAutosized, setIsTextAreaAutosized]);\n\n  return (\n    <div className={classnames([cardStructure, postCard])}>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className={postBody}>\n          <div className={postBodyLeft}>\n            <UserImagePlaceholder size=\"44px\" />\n          </div>\n          <div className={postBodyRight}>\n            <textarea\n              ref={inputArea}\n              className={postBodyTextWriter}\n              name=\"\"\n              id=\"\"\n              placeholder=\"Share what you are thinking ?\"\n            />\n          </div>\n        </div>\n      </CardBody>\n      <div className={postCardUpperLightStroke} />\n    </div>\n  );\n}\n\nexport function GamerCard({\n  name,\n  profilePictureSrc,\n  gamerStats,\n  languages,\n  achievements,\n  availableForRecruitment,\n}: GamerCardProps) {\n  const [currentFace, setCurrentFace] = useState(CardFacesEnum.FRONT);\n  return (\n    <div className={gamerCardStructure}>\n      {currentFace === CardFacesEnum.FRONT && (\n        <div className={gamerCardFrontFace}>\n          <div className={displayPictureSpace}>\n            <img className={displayPicture} src={profilePictureSrc} alt=\"\" />\n          </div>\n          <div className={displayNameSpace}>\n            <div className={displayNameLeftPiece} />\n            <h4 className={displayName}>{name}</h4>\n            <div className={displayNameRightPiece} />\n          </div>\n          <div className={gamerStatsSpace}>\n            <div className={gamerStatRow}>\n              <div className={gamerStatLabel}>Game</div>\n              <div className={gamerStatValues}>{gamerStats.game}</div>\n            </div>\n            <div className={gamerStatRow}>\n              <div className={gamerStatLabel}>Team</div>\n              <div className={gamerStatValues}>{gamerStats.team || \"-\"}</div>\n            </div>\n            <div className={gamerStatRow}>\n              <div className={gamerStatLabel}>Rank</div>\n              <div className={gamerStatValues}>{gamerStats.rank}</div>\n            </div>\n            <div className={gamerStatRow}>\n              <div className={gamerStatLabel}>Role</div>\n              <div className={classnames([gamerRoles, gamerStatValues])}>\n                {gamerStats.roles.map(({ RenderGraphic, name }) => (\n                  <div className={gamerRoleItem}>\n                    <RenderGraphic className={gamerRoleGraphic} />\n                    <span className={gamerRoleName}>{name}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className={faceSwitcherSpace}>\n            <button\n              className={faceSwitchButton}\n              onClick={() => {\n                setCurrentFace(CardFacesEnum.BACK);\n              }}\n            >\n              <span className={classnames([switchOrb, activeSwitchOrb])} />\n              <span className={switchOrb} />\n            </button>\n          </div>\n        </div>\n      )}\n      {currentFace === CardFacesEnum.BACK && (\n        <div className={gamerCardBackFace}>\n          <div className={languageSpace}>\n            <h5>Language</h5>\n          </div>\n          <div className={achievementsSpace}>\n            <h5>Achievements</h5>\n          </div>\n          <div className={recruitmentDetailsSpace}>\n            <h5>Available for recruitment: </h5>\n          </div>\n          <div className={faceSwitcherSpace}>\n            <button\n              className={faceSwitchButton}\n              onClick={() => {\n                setCurrentFace(CardFacesEnum.FRONT);\n              }}\n            >\n              <span className={switchOrb} />\n              <span className={classnames([switchOrb, activeSwitchOrb])} />\n            </button>\n          </div>\n          <div className={backFaceOrangePiece} />\n        </div>\n      )}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/player.d96cca8e.jpg\";","import classnames from 'classnames';\n\nimport { BiHeadphone } from 'react-icons/bi';\nimport { GiGrenade } from 'react-icons/gi';\nimport { BiAnchor } from 'react-icons/bi';\nimport { GiSplitArrows } from 'react-icons/gi';\n\nimport { NewPostCard, GamerCard, UpcomingGamesCard, RecentlyUploadedCard } from 'components/Card';\nimport playerImage from 'assets/player.jpg';\n\nimport ContentAreaProps from 'types/ContentAreaProps';\nimport HoldingChildrenProps from 'types/HoldingChildrenProps';\nimport GamerCardProps from 'types/GamerCardProps';\n\nimport contentAreaStyling from 'styling/content-area.module.sass';\n\nconst { 'push-right-mode': pushRightMode, containment, column, 'feed-column': feedColumn } = contentAreaStyling;\n\nconst Column = ({ children }: HoldingChildrenProps) => (\n  <div className={column}>{children}</div>\n);\n\nconst FeedColumn = ({ children }: HoldingChildrenProps) => (\n  <div className={feedColumn}>{children}</div>\n);\n\nconst size = \"1.5em\";\n\nconst sampleUser: GamerCardProps = {\n  profilePictureSrc: playerImage,\n  name: 'Gaming Name',\n  gamerStats: {\n    game: 'Valorant',\n    team: undefined,\n    rank: 'Diamond II',\n    roles: [\n      { name: 'support', RenderGraphic: () => <BiHeadphone size={size} /> },\n      { name: 'flagger', RenderGraphic: () => <GiGrenade size={size} /> },\n      { name: 'Anchor', RenderGraphic: () => <BiAnchor size={size} /> },\n      { name: 'Flex', RenderGraphic: () => <GiSplitArrows size={size} /> }\n    ],\n  },\n  availableForRecruitment: false,\n};\n\nexport default function ContentArea({ sidebarOpen }: ContentAreaProps) {\n  return (\n    <div className={classnames([containment, sidebarOpen && pushRightMode])}>\n      <Column>\n        <GamerCard {...sampleUser} />\n      </Column>\n      <FeedColumn>\n        <NewPostCard />\n      </FeedColumn>\n      <Column>\n        <UpcomingGamesCard />\n        <RecentlyUploadedCard />\n      </Column>\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nimport Navbar from 'components/Navbar';\nimport Sidebar from 'components/Sidebar';\nimport ContentArea from 'components/ContentArea';\n\nimport 'styling/main.sass';\n\nimport main from 'styling/main.module.sass';\nconst { 'sidebar-and-content-wrapper': sidebarAndContentWrapper } = main;\n\nfunction App() {\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(true);\n  const sidebarToggler = () => { setSidebarIsOpen(!sidebarIsOpen); }\n  return (\n    <div className={main.app}>\n      <Navbar sidebarToggler={sidebarToggler} />\n      <div className={sidebarAndContentWrapper}>\n        <Sidebar isOpen={sidebarIsOpen} />\n        <ContentArea sidebarOpen={sidebarIsOpen} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containment\":\"navbar_containment__i3Fgw\",\"navbar-nav\":\"navbar_navbar-nav__1vWoB\",\"sidebar-icon-containment\":\"navbar_sidebar-icon-containment__3Ss5v\",\"sidebar-icon-button\":\"navbar_sidebar-icon-button__-mgx0\",\"site-logo\":\"navbar_site-logo__428RB\",\"search-containment\":\"navbar_search-containment__1DnPJ\",\"search-component\":\"navbar_search-component__1s0iO\",\"search-icon\":\"navbar_search-icon__gDIR_\",\"search-input\":\"navbar_search-input__2cce7\",\"listed-items\":\"navbar_listed-items__1BaG1\",\"message-notifcation-containment\":\"navbar_message-notifcation-containment__1V5Yy\",\"message-indicator\":\"navbar_message-indicator__3k5Sz\",\"greeting-and-addressing-block\":\"navbar_greeting-and-addressing-block__1vhR3\",\"addressing-block\":\"navbar_addressing-block__1rui3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"is-closed\":\"sidebar_is-closed__ZKfLg\",\"containment\":\"sidebar_containment__3tHQW\",\"list-items\":\"sidebar_list-items__1JJRe\"};"],"sourceRoot":""}